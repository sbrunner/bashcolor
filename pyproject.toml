[tool.ruff]
target-version = "py39"
line-length = 110

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.poetry]
name = "bashcolor"
version = "0.0.0"
description = "A simple library to get colors in the bash terminal"
readme = "README.md"
authors = ["St√©phane Brunner <stephane.brunner@gmail.com>"]
homepage = "https://hub.docker.com/r/sbrunner/bashcolor/"
repository = "https://github.com/sbrunner/bashcolor"
license = "BSD-2-Clause"
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: BSD License',
    'Operating System :: OS Independent',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Typing :: Typed',
]
packages = [{ include = "bashcolor" }, { include = "bashcolor/py.typed" }]

[tool.poetry.scripts]
print_colors = "bashcolor:print_colors"

[tool.poetry.dependencies]
python = ">=3.9,<3.13"

[tool.poetry.group.dev.dependencies]
prospector = { version = "1.16.0", extras = ["with_bandit", "with_mypy", "with_pyroma", "with_ruff"] }
prospector-profile-duplicated = "1.10.5"
prospector-profile-utils = "1.22.3"

[tool.poetry-plugin-tweak-dependencies-version]
default = "present"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
pattern = "^((?P<epoch>\\d+)!)?(?P<base>\\d+(\\.\\d+)*)"
format-jinja = """
{%- if env.get("VERSION_TYPE") == "default_branch" -%}
{{serialize_pep440(bump_version(base, 1), dev=distance)}}
{%- elif env.get("VERSION_TYPE") == "stabilization_branch" -%}
{{serialize_pep440(bump_version(base, 2), dev=distance)}}
{%- elif distance == 0 -%}
{{serialize_pep440(base)}}
{%- else -%}
{{serialize_pep440(bump_version(base), dev=distance)}}
{%- endif -%}
"""

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-plugin-tweak-dependencies-version", "poetry-dynamic-versioning", "poetry-plugin-drop-python-upper-constraint"]
build-backend = "poetry.core.masonry.api"
